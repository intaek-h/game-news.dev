name: Deploy
on:
  push:
    branches: deno-cron
  pull_request:
    branches: deno-cron

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    permissions:
      id-token: write # Needed for auth with Deno Deploy
      contents: read # Needed to clone the repository

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install step
        run: "deno install"

      - name: Build step
        run: "deno task build:cron"
        env:
          TURSO_API_KEY: ${{ secrets.TURSO_API_KEY }}
          TURSO_PRODUCTION_DB_URL: ${{ secrets.TURSO_PRODUCTION_DB_URL }}
          INTAEK_API_KEY: ${{ secrets.INTAEK_API_KEY }}
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
          PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
          SELF_URL: ${{ secrets.SELF_URL }}
          GOOGLE_SEARCH_ENDPOINT: ${{ secrets.GOOGLE_SEARCH_ENDPOINT }}
          GOOGLE_SEARCH_API_KEY: ${{ secrets.GOOGLE_SEARCH_API_KEY }}
          GOOGLE_SEARCH_ENGINE_ID: ${{ secrets.GOOGLE_SEARCH_ENGINE_ID }}
          OPENVERSE_CLIENT_ID: ${{ secrets.OPENVERSE_CLIENT_ID }}
          OPENVERSE_API_KEY: ${{ secrets.OPENVERSE_API_KEY }}
          OPENVERSE_ENDPOINT: ${{ secrets.OPENVERSE_ENDPOINT }}
          R2_BUCKET: ${{ secrets.R2_BUCKET }}
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_TOKEN: ${{ secrets.R2_TOKEN }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}

      - name: Upload to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: "extinguish-backend"
          entrypoint: "main.ts"
          root: ""
